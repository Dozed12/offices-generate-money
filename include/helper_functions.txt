include("settings.txt");
defineVariable(int, day);
defineVariable(int, month);
defineVariable(int, year);
defineVariable(int, money);
defineVariable(float, max);
defineVariable(float, min);
defineVariable(int, imax);
defineVariable(float, value_change_rub);
defineVariable(float, value_change_usd);

defineFunction(Clamp, float, float:x, float:y, float:z)
{
    if (x < y)
	{
        x = y;
    }
	elseif(x > z) {
		x = z;
	}
	return(x);
}

defineFunction(ModuleFloat, float, float:c)
{
    if (c < 0.0) {
        c = -c;
    }
	return(c);
}

defineFunction(ModuleInt, int, int:d)
{
    if (d < 0) {
        d = -d;
    }
	return(d);
}

defineFunction(MaxFloat, float, float:a, float:b)
{
    if (a < b)
	{
        max = b;
    }
	else()
	{
		max = a;
	}
	return(max);
}

defineFunction(MinFloat, float, float:e, float:f)
{
    if (e < f)
	{
        min = e;
    }
	else()
	{
		min = f;
	}
	return(min);
}

defineFunction(MaxInt, int, int:g, int:h)
{
    if (g < h)
	{
        imax = h;
    }
	else()
	{
		imax = g;
	}
	return(imax);
}

defineFunction(ScaledRUB, int, float:value_rub)
{
	Date_GetCurrentDate_DMY(day, month, year);
	value_change_rub = INFLATION_RUB ^ (year - START_YEAR);
	money = value_rub * value_change_rub;
	return(money);
}

defineFunction(ScaledUSD, int, float:value_usd)
{
	Date_GetCurrentDate_DMY(day, month, year);
	value_change_usd = INFLATION_USD ^ (year - START_YEAR);
	money = value_usd * value_change_usd;
	return(money);
}

